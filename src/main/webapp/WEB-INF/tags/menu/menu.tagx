<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:spring="http://www.springframework.org/tags" version="2.0">
<jsp:output omit-xml-declaration="yes"/>

<jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)"/>
<jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true"
                         description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')"/>
<jsp:directive.attribute name="z" type="java.lang.String" required="false"
                         description="Used for checking if element has been modified (to recalculate simply provide empty string value)"/>

<style>
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, main {
    display: block;
}


ol, ul, li {
    list-style: none;
    padding: 0px;
    margin: 0px;
}

blockquote, q {
    quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

/*li.dropdown > a {*/
    /*color: white;*/
    /*text-decoration: none;*/
/*}*/
.menu-header {
    box-shadow: inset 0 -1px rgba(0,0,0,0.2);
}

/* --------------------------------

Modules - reusable parts of our design

-------------------------------- */
.overflow-hidden {
    overflow: hidden;
}

/* --------------------------------

Main components

-------------------------------- */
.cd-main-content {
    /* set a min-height and a z-index to be sure that the main element completely covers the lateral menu */
    min-height: 100%;
    position: relative;
    background-color: #f5f4e9;
    z-index: 2;
    padding-top: 30px;
    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    -webkit-transition-property: -webkit-transform;
    -moz-transition-property: -moz-transform;
    transition-property: transform;
    -webkit-transition-duration: 0.4s;
    -moz-transition-duration: 0.4s;
    transition-duration: 0.4s;
}

.cd-main-content.lateral-menu-is-open {
    /* translate to show the lateral menu - all content needs to be put in the .cd-main-content to translate*/
    -webkit-transform: translateX(400px);
    -moz-transform: translateX(400px);
    -ms-transform: translateX(400px);
    -o-transform: translateX(400px);
    transform: translateX(400px);
}

@media only screen and (min-width: 768px) {
    .cd-main-content {
        padding-top: 30px;
    }
}

header {
    position: absolute;
    top: 0;
    left: 0;
    height: 30px;
    width: 100%;
    background: #337ab7;
    z-index: 3;
    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    -webkit-transition-property: -webkit-transform;
    -moz-transition-property: -moz-transform;
    transition-property: transform;
    -webkit-transition-duration: 0.4s;
    -moz-transition-duration: 0.4s;
    transition-duration: 0.4s;
}

header.lateral-menu-is-open {
    /* translate to show the lateral menu */
    -webkit-transform: translateX(400px);
    -moz-transform: translateX(400px);
    -ms-transform: translateX(400px);
    -o-transform: translateX(400px);
    transform: translateX(400px);
}

header.is-fixed {
    position: fixed;
}

@media only screen and (min-width: 768px) {
    header {
        height: 30px;
    }
}

.sub-menu > li > a:hover, .item-has-children > a:hover {
    background: rgba(0,0,0,0.2) !important;
}

#cd-top-nav ul {
    height: 100%;
    padding-top: 10px;
}

#cd-top-nav li {
    display: inline-block;
    margin-right: 1em;
}

#cd-top-nav a {
    display: inline-block;
    padding: .5em;
    color: #FFF;

    text-transform: uppercase;
    font-weight: 600;
}

#cd-top-nav a.current {
    background-color: #242e30;
}

/*.no-touch #cd-top-nav a:hover {*/
    /*color: rgba(255, 255, 255, 0.7);*/
/*}*/

@media only screen and (min-width: 768px) {
    #cd-top-nav {
        display: block;
    }
}

#cd-menu-trigger {
    position: absolute;
    left: 50px;
    top: 0;
    height: 100%;
    width: 50px;
    background-color: #337ab7;
    cursor: pointer;
}

#cd-menu-trigger .cd-menu-text {
    height: 100%;
    text-transform: uppercase;
    color: #FFF;
    font-weight: 600;
    display: none;
}

#cd-menu-trigger .cd-menu-icon {
    /* this span is the central line in the menu menu */
    display: inline-block;
    position: absolute;
    left: 50%;
    top: 45%;
    bottom: auto;
    right: auto;
    -webkit-transform: translateX(-50%) translateY(-50%);
    -moz-transform: translateX(-50%) translateY(-50%);
    -ms-transform: translateX(-50%) translateY(-50%);
    -o-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    width: 18px;
    height: 2px;
    background-color: #FFF;
    cursor: pointer;
    /* these are the upper and lower lines in the menu menu */
}

#cd-menu-trigger .cd-menu-icon::before, #cd-menu-trigger .cd-menu-icon:after {
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    background-color: inherit;
    left: 0;
}

#cd-menu-trigger .cd-menu-icon::before {
    bottom: 5px;
}

#cd-menu-trigger .cd-menu-icon::after {
    top: 5px;
}

#cd-menu-trigger.is-clicked .cd-menu-icon {
    background-color: rgba(202, 40, 21, 0);
}

#cd-menu-trigger.is-clicked .cd-menu-icon::before, #cd-menu-trigger.is-clicked .cd-menu-icon::after {
    background-color: white;
}

#cd-menu-trigger.is-clicked .cd-menu-icon::before {
    bottom: 0;
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    transform: rotate(45deg);

}

#cd-menu-trigger.is-clicked .cd-menu-icon::after {
    top: 0;
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg);
}

@media only screen and (min-width: 768px) {
    #cd-menu-trigger {
        width: 50px;
        padding-left: 1.25em;
    }

    #cd-menu-trigger .cd-menu-text {
        display: inline-block;
        line-height: 30px;

    }

    #cd-menu-trigger .cd-menu-icon {
        left: auto;
        right: 1.25em;
        -webkit-transform: translateX(0);
        -moz-transform: translateX(0);
        -ms-transform: translateX(0);
        -o-transform: translateX(0);
        transform: translateX(0);
    }
}

#cd-lateral-nav {
    position: fixed;
    height: 100%;
    top: 0;
    visibility: hidden;
    /* the secondary navigation is covered by the main element */
    z-index: 1000;
    width: 400px;
    background-color: #428bca;
    overflow-y: auto;
    /* Force Hardware Acceleration in WebKit */
    -webkit-transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    -webkit-transition: -webkit-transform .4s 0s, visibility 0s .4s;
    -moz-transition: -moz-transform .4s 0s, visibility 0s .4s;
    transition: transform .4s 0s, visibility 0s .4s;
    /* this creates the subtle slide in animation of the navigation */
    -webkit-transform: translateX(-400px);
    -moz-transform: translateX(-400px);
    -ms-transform: translateX(-400px);
    -o-transform: translateX(-400px);
    transform: translateX(-400px);
    border-style: solid;
    border-top-width: 30px;
    border-left: 0;
    border-right: 0;
    border-color: #337ab7;
}

#cd-lateral-nav .cd-navigation {
    /*margin: 10px 0 10px;*/
}

#cd-lateral-nav .sub-menu {
    padding: 0 10px 10px 15px;
    display: none;
}

#cd-lateral-nav a {
    display: block;
    line-height: 2em;
    padding: 0 1px 0 15px;
    color: #fff;

}

#cd-lateral-nav a.current {
    background-color: #3a4a4d;
    color: #FFF;
    margin-left: 0;
}

.no-touch #cd-lateral-nav a:hover {
    color: #FFF;

}

@media only screen and (min-width: 768px) {
    #cd-lateral-nav .cd-navigation {
        /*margin: 10px 0;*/
    }
}

#cd-lateral-nav.lateral-menu-is-open {
    -webkit-transform: translateX(0);
    -moz-transform: translateX(0);
    -ms-transform: translateX(0);
    -o-transform: translateX(0);
    transform: translateX(0);
    visibility: visible;
    -webkit-transition: -webkit-transform .4s 0s, visibility 0s 0s;
    -moz-transition: -moz-transform .4s 0s, visibility 0s 0s;
    transition: transform .4s 0s, visibility 0s 0s;
    /* smooth the scrolling on touch devices - webkit browsers */
    -webkit-overflow-scrolling: touch;

}

/* style menu items which have a submenu  */
#cd-lateral-nav .item-has-children > a {
    position: relative;
    /*            font-weight: 300;*/
    /* this is the right arrow to show that the item has a submenu  */
}

#cd-lateral-nav .item-has-children > a::after {
    content: '';
    display: block;
    height: 11px;
    width: 8px;
    position: absolute;
    top: 50%;
    bottom: auto;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    transform: translateY(-50%);
    right: 1em;
    background: url("${pageContext.request.contextPath}/resources/images/right-arrow.png") no-repeat center center;
    background-size: 8px 11px;
    -webkit-transition-property: -webkit-transform;
    -moz-transition-property: -moz-transform;
    transition-property: transform;
    -webkit-transition-duration: 0.2s;
    -moz-transition-duration: 0.2s;
    transition-duration: 0.2s;
}

#cd-lateral-nav .item-has-children > a.submenu-open::after {
    -webkit-transform: translateY(-50%) rotate(90deg);
    -moz-transform: translateY(-50%) rotate(90deg);
    -ms-transform: translateY(-50%) rotate(90deg);
    -o-transform: translateY(-50%) rotate(90deg);
    transform: translateY(-50%) rotate(90deg);
}

/*#cd-lateral-nav .socials {*/
    /*padding: 0 32px;*/
/*}*/

/*#cd-lateral-nav .socials:after {*/
    /*content: "";*/
    /*display: table;*/
    /*clear: both;*/
/*}*/

/*#cd-lateral-nav .socials a.cd-twitter {*/
    /*background-position: 0 0;*/
/*}*/

/*#cd-lateral-nav .socials a.cd-github {*/
    /*background-position: -32px 0;*/
/*}*/

/*#cd-lateral-nav .socials a.cd-facebook {*/
    /*background-position: -64px 0;*/
/*}*/

/*#cd-lateral-nav .socials a.cd-google {*/
    /*background-position: -96px 0;*/
/*}*/

/*.no-touch #cd-lateral-nav .socials a:hover {*/
    /*background-color: #4e6361;*/
/*}*/

/*.no-touch #cd-lateral-nav .socials a:hover.cd-twitter {*/
    /*background-position: 0 -32px;*/
/*}*/

/*.no-touch #cd-lateral-nav .socials a:hover.cd-github {*/
    /*background-position: -32px -32px;*/
/*}*/

/*.no-touch #cd-lateral-nav .socials a:hover.cd-facebook {*/
    /*background-position: -64px -32px;*/
/*}*/

/*.no-touch #cd-lateral-nav .socials a:hover.cd-google {*/
    /*background-position: -96px -32px;*/
/*}*/

a:focus {
    outline: none;
    text-decoration: none;
}

li.dropdown {
    float: right;
    color: white;
    display: block;
    padding: 5px;
    margin: 0;
}

li.cd-menu-text {
    float: right;
    color: white;
    display: block;
    padding: 5px;
    margin-top: 4px;
}

.cd-name-webapp {
    color: white;
    position: absolute;
    left: 0.4em;
    top: 0;
    height: 100%;
    width: 50px;
    padding-top: 0.5em;
}

.cd-name-webapp:hover {
    color: white;
}

.menu-hide {
    display: none;
}

li a {
    word-wrap: break-word;
    /*  width: 240px;*/
}

.mp-menu ul li a:hover,
.menu-header > ul > li:first-child > a:hover {
    background: rgba(0,0,0,0.2);
    box-shadow: inset 0 -1px rgba(0,0,0,0);
}

li p {
    color: black;
    word-wrap: break-word;
    font-size: 13px;
    padding: 3px 20px;
    /*  width: 240px;*/
}

</style>
<header style="display: none;">
    <div id="cd-menu-trigger" class="mp-menu">

        <span class="cd-menu-icon"></span>
    </div>
</header>

<main class="cd-main-content" style="display: none; background-color: #cdffff">

    <c:set scope="request" var="textBT0001"><spring:message javaScriptEscape="true" text="BT0001"/></c:set>
    <c:set scope="request" var="textBT0002"><spring:message javaScriptEscape="true" text="BT0002"/></c:set>
    <c:set scope="request" var="textBT0016"><spring:message javaScriptEscape="true" text="BT0016"/></c:set>
    <c:set scope="request" var="textBT0043"><spring:message javaScriptEscape="true" text="BT0043"/></c:set>
    <c:set scope="request" var="textLB0038"><spring:message javaScriptEscape="true" text="LB0038"/></c:set>
    <c:set scope="request" var="textMS0080"><spring:message javaScriptEscape="true" text="MS0080"/></c:set>
    <c:set scope="request" var="textMS0081"><spring:message javaScriptEscape="true" text="MS0081"/></c:set>
    <c:set scope="request" var="BUTTON_OK"> <spring:message javaScriptEscape="true" text="BT0016"/></c:set>
    <c:set scope="request" var="BUTTON_CANCEL"><spring:message javaScriptEscape="true" text="BT0002"/></c:set>
    <!-- put your content here -->

</main>
<!-- cd-main-content -->

<nav id="cd-lateral-nav" class="mp-menu">
    <h2 class="icon icon-world menu-header" style="color: whitesmoke">${LABEL_MENU}</h2>
    <ul class="cd-navigation">
    </ul>
    <!-- cd-navigation -->

    <ul class="cd-navigation cd-single-item-wrapper" style="display: none;">
    </ul>
    <!-- cd-single-item-wrapper -->

</nav>

<script type="text/javascript">
<![CDATA[
var cookieMenu = "historyMenu";
var elementMenuModule, elementSubject, elementSubMenu, idElementMenuModule, idElementMenuSubject, idElementMenuSubMenu;

// Change Language
$('.image-nav').click(function () {
    commonChangeLanguage($(this).attr('alt'));
});

function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
    var expires = "expires=" + d.toGMTString();
    document.cookie = cname + "=" + cvalue + "; " + expires + ";path=/";
}

function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1);
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

function checkCookie() {
    var historyMenu = getCookie(cookieMenu);
    if (historyMenu != "" && historyMenu != null && typeof(historyMenu) != "undefined") {
        return historyMenu;
    } else {
        return null;
    }
}

function openLink(id) {
    //not use
    elementMenuModule = $("#" + id).parent().parent().parent().parent().parent();
    elementSubject = $("#" + id).parent().parent().parent();
    elementSubMenu = $("#" + id);
    //////////////

    var length = $("#"+id).parents('.item-has-children').length;
    var loop = length+1;
    var menuLevel = {};
    for(var i=1 ;i<=loop; i++){
        var index = length-i;
        var name = "menuLevel_"+i;
        if(i != loop){
            menuLevel[name] = $("#"+id).parents('.item-has-children')[index].getAttribute("id");
        }else{
            menuLevel["menuLevel_lastElement"] = $("#"+id).attr("id")
        }
    }
    menuLevel["idElementMenuModule"] = elementMenuModule.attr("id");
    menuLevel["idElementMenuSubject"] = elementSubject.attr("id");
    menuLevel["idElementMenuSubMenu"] = elementSubMenu.attr("id");
    setCookie(cookieMenu, JSON.stringify(menuLevel), 1);

    location.href = session.context + $("#" + id).attr("data-link");
}
function getAllOuMenu(){
    $('.currentOu').empty();
    var options = {
        url: session.context + "/oumanages/getOuMenu",
        type: "GET",
        async: false,
        contentType: "application/json; charset=utf-8",
        dataType: "json"
    };
    var settings = $.extend({}, ajaxPattern, options);
    var datas = $.ajax(settings);
    var dataMenuOU = JSON.parse(datas.responseText);
    $.each(dataMenuOU, function (index, value) {
        $(".currentOu").append('<li><a onclick="updateOu('+"'"+value.ouCode+"'"+')">'+ 'OU :  '+ value.ouCode + '</a></li>');
    });
}
function getOuMenu() {
//            $('#ouMenuId').empty();

    $('#ouMenuId').append('<span class="glyphicon glyphicon-home"><jsp:text/></span>');
    var data = $.ajax({
        type: "POST",
        url: session['context'] + '/oumanages/getCurrentOuCode/',
        async: false
    }).responseText;
    var jsonData = JSON.parse(data);
    if (jsonData != null && jsonData != "") {
        var ouName = _language == "EN" ? jsonData.ouEngName : jsonData.ouLocalName;
//

        $('#ouMenuId').append(' OU : ' + jsonData.ouCode);
//                $(".currentOu").empty();

    }


}
function  updateOu(upOuCode){
    $('#ouMenuId,.currentOu').empty();
//            $("div[id=allMenuOU]").hide();
    var ouCode = upOuCode;
    var userID = session.userId.user_Id;
    var options = {
        url: session.context + "/oumanages/updateOuCode",
        type: "POST",
        data: {
            "ouCode": upOuCode,
            "userId": userID
        },
        async: false,
        success: function (data) {
            if (data.update == "1") {
                $("div[id=cd-menu-trigger]").fadeIn(500);
                if(ouCode!=null && ouCode!=""){
                    //Add ou on menu
                    getOuMenu(data.ouData);
                }
            }
        }
    }
    var settings = $.extend({}, ajaxPattern, options);
    var data = $.ajax(settings);
};

jQuery(document).ready(function ($) {





    /*// Generate Menu
    $.each(JSON.parse('${sessionScope.menu}'), function (index, value) {

        if ($('[id="' + value.id + '"]').length == 0) {
            var link = value.urlLink;
            var parent= value.parent;
            var id = value.id;
            var name = value.engName
            var sequence = value.sequence;
            var elementWithParentAccessToSubMenu = $("li[class=item-has-children][id=" + parent + "] ul[class=sub-menu][id=" + parent + "]");
            if (!(sequence == "" || sequence == null || typeof (sequence) == "undefined")) {
                if (elementWithParentAccessToSubMenu.length > 0) {
                    if (link == "" || typeof (link) == "undefined" || link == null) {
                        elementWithParentAccessToSubMenu.append('<li class="item-has-children" id="' + id + '">' +
                                '<a>' + name + '</a>' +
                                '<ul class="sub-menu" id=' + id + '>' +
                                '</ul>' +
                                '</li>');
                    } else {
                        elementWithParentAccessToSubMenu.append(
                                        '<li>' +
                                    // '<a href="'+session.contextCurrentURL+''+link+'"> - '+name+'</a>' +
                                        '<a  onclick="openLink(' + id + ')" id="' + id + '"  data-link="' + link + '" > - ' + name + '</a>' +
                                        '</li>');
                    }

                } else if (link == "" || typeof (link) == "undefined" || link == null) {
                    $("ul[class='cd-navigation']").append('<li class="item-has-children" id="' + id + '">' +
                            '<a>' + name + '</a>' +
                            '<ul class="sub-menu" id=' + id + '>' +
                            '</ul>' +
                            '</li>');
                } else if (!(parent == "" || parent == null || typeof (parent) == "undefined")) {
                    $("ul[class='cd-navigation cd-single-item-wrapper']").append(' <li>' +
                        //'<a href="'+session.contextCurrentURL+''+link+'">'+name+'</a>' +
                            '<a  onclick="openLink(' + id + ')" id="' + id + '" data-link="' + link + '"> - ' + name + '</a>' +
                            '</li>');
                }
            }

        }

    });

    var $lateral_menu_trigger = $('#cd-menu-trigger'),
            $content_wrapper = $('.cd-main-content'),
            $navigation = $('header');

    //open-close lateral menu clicking on the menu icon
    $lateral_menu_trigger.on('click', function (event) {
        event.preventDefault();
        $lateral_menu_trigger.toggleClass('is-clicked');
        $navigation.toggleClass('lateral-menu-is-open');
        $content_wrapper.toggleClass('lateral-menu-is-open').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
            // firefox transitions break when parent overflow is changed, so we need to wait for the end of the trasition to give the body an overflow hidden
            $('body').toggleClass('overflow-hidden');
        });
        $('#cd-lateral-nav').toggleClass('lateral-menu-is-open');

        //check if transitions are not supported - i.e. in IE9
        if ($('html').hasClass('no-csstransitions')) {
            $('body').toggleClass('overflow-hidden');
        }
    });

    //close lateral menu clicking outside the menu itself
    $("html").on('click', function (event) {
        if ($(event.target).closest('nav').is('nav')) {
            if ($(event.target).attr("id") == "cd-lateral-nav") {
                var elementNav = $(event.target).closest('nav');
                $('ul li a', elementNav).css('background-color', "#428bca");
            }
            return false;
        }
        else if (!$(event.target).is('#cd-menu-trigger, #cd-menu-trigger span')) {
            $lateral_menu_trigger.removeClass('is-clicked');
            $navigation.removeClass('lateral-menu-is-open');
            $content_wrapper.removeClass('lateral-menu-is-open').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
                $('body').removeClass('overflow-hidden');
            });
            $('#cd-lateral-nav').removeClass('lateral-menu-is-open');
            //check if transitions are not supported
            if ($('html').hasClass('no-csstransitions')) {
                $('body').removeClass('overflow-hidden');
                console.log("b");
            }
        }
    });

    //open (or close) submenu items in the lateral menu. Close all the other open submenu items.
    $('.item-has-children').children('a').on('click', function (event) {
        event.preventDefault();
        $(this).toggleClass('submenu-open').next('.sub-menu').slideToggle(200).end().parent('.item-has-children').siblings('.item-has-children').children('a').removeClass('submenu-open').next('.sub-menu').slideUp(200);
        if ($(this)[0].getAttribute('class') == "") closeSubMenuByParentClick($(this));
    });
    var $ul_li_childA = $('ul[class=cd-navigation] li a,ul[class="cd-navigation cd-single-item-wrapper"] li a');
    $ul_li_childA.on("click", function (event) {
        var elementNav = $(event.target).closest('nav');
        $('ul[class=cd-navigation] li a,ul[class="cd-navigation cd-single-item-wrapper"] li a', elementNav).css('background-color', "#428bca");
        $(this).css('background-color', "#3a4a4d");
        if ($(this).attr("href") != null && $(this).attr("href") != "" && typeof($(this).attr("href")) != "undefined") {
            location.href = $(this).attr("href");
        }
    });

            generateMenuHistory();*/
});

function closeSubMenuByParentClick(parent) {
    var $this_menu = [parent.parent('li')[0].id];
    var $this_menu_length = $this_menu.length;
    for (var i = 0; i < $this_menu_length; i++) {
        var $this_menu_i_ul = $('ul#' + $this_menu[i] + '.sub-menu');
        if ($this_menu_i_ul.children('li').length != 0) {
            for (var j = 0; j < $this_menu_i_ul.children('li').length; j++) {
                if ($this_menu_i_ul.children('li')[j].id != '') {
                    $this_menu.push($this_menu_i_ul.children('li')[j].id);
                    $this_menu_length++;
                }
            }
            var $this_menu_i_li = $('li#' + $this_menu[i]);
            if ($this_menu_i_li.children('a')[0].className == "submenu-open") {
                $this_menu_i_li.children('a').removeClass('submenu-open').next('.sub-menu').slideUp(200);
            }
        }
    }
}

function generateMenuHistory() {
    if (checkCookie() != null) {
        var tempCookieMenu = JSON.parse(getCookie(cookieMenu));
        console.info(tempCookieMenu);
        var menuLevel1 = tempCookieMenu.menuLevel_1;
        var menuLevel2 = tempCookieMenu.menuLevel_2;
        var menuLevel3 = tempCookieMenu.menuLevel_3;
        var menuLevel4 = tempCookieMenu.menuLevel_lastElement;//element clicked
        var elementMenuLevel1 = $("li[id=" + menuLevel1 + "][class=item-has-children]").children("a");
        var elementMenuLevel2 = $("li[id=" + menuLevel2 + "][class=item-has-children]").children("a");
        var elementMenuLevel3 = $("li[id=" + menuLevel3 + "][class=item-has-children]").children("a");
        var lastElement = $("#"+menuLevel4);
        if(elementMenuLevel1.length > 0){
            elementMenuLevel1.toggleClass('submenu-open').next('.sub-menu').slideToggle(200).end().parent('.item-has-children').siblings('.item-has-children').children('a').removeClass('submenu-open').next('.sub-menu').slideUp(200);
            if(elementMenuLevel2.length > 0){
                elementMenuLevel2.toggleClass('submenu-open').next('.sub-menu').slideToggle(200).end().parent('.item-has-children').siblings('.item-has-children').children('a').removeClass('submenu-open').next('.sub-menu').slideUp(200);
                if(elementMenuLevel3.length > 0){
                    elementMenuLevel3.toggleClass('submenu-open').next('.sub-menu').slideToggle(200).end().parent('.item-has-children').siblings('.item-has-children').children('a').removeClass('submenu-open').next('.sub-menu').slideUp(200);
                }
            }
            lastElement.css('background-color', "rgb(58, 74, 77);");
        }
    }
}

var textBT0002 = '${textBT0002}';
var textBT0016 = '${textBT0016}';
var textBT0001 = '${textBT0001}';
var textBT0043 = '${textBT0043}';
var textLB0038 = '${textLB0038}';
var textMS0080 = '${textMS0080}';
var textMS0081 = '${textMS0081}';
var buttonApprove = '${BUTTON_OK}';
var buttonCancel = '${BUTTON_CANCEL}';
function readWritePermissionSetUp() {
    if (checkCookie() != null) {
        var readWritePermission = session.readWritePermission.read_Write_Permission[JSON.parse(getCookie(cookieMenu)).idElementMenuSubMenu];
        if (readWritePermission == "Y") {
            console.info("PERMISSION LEVEL : READ WRITE");
            for (var i = 0; i < $('input').length; i++) {
                $('input')[i].setAttribute('hrms_read_write_flag', 'rw');
            }
            for (var i = 0; i < $('textarea').length; i++) {
                $('textarea')[i].setAttribute('hrms_read_write_flag', 'rw');
            }
            for (var i = 0; i < $('select').length; i++) {
                $('select')[i].setAttribute('hrms_read_write_flag', 'rw');
            }
            for (var i = 0; i < $('button').length; i++) {
                $('button')[i].setAttribute('hrms_read_write_flag', 'rw');
            }
            for (var i = 0; i < $('table').length; i++) {
                $('table')[i].setAttribute('hrms_read_write_flag', 'rw');
            }
        } else {
            console.info("PERMISSION LEVEL : READ ONLY");
            for (var i = 0; i < $('input').length; i++) {
                if ($('input')[i].getAttribute('type') != null && $('input')[i].getAttribute('type').toLowerCase().trim() == 'checkbox') {
                    $('input')[i].setAttribute('disabled', 'disabled');
                }
                $('input')[i].setAttribute('hrms_read_write_flag', 'r');
            }
            for (var i = 0; i < $('textarea').length; i++) {
//                        $('textarea')[i].setAttribute('disabled', 'disabled');
                $('textarea')[i].setAttribute('hrms_read_write_flag', 'r');
            }
            for (var i = 0; i < $('select').length; i++) {
                if ($('select')[i].getAttribute("class") != null) {
                    var _class = $('select')[i].getAttribute("class").split(" ");
                    for (var j = 0; j < _class.length; j++) {
                        if (_class[j] == 'selectized') {
//                                    $('select')[j].selectize.disable();
                            break;
                        } else {
//                                    $('select')[j].setAttribute('disabled', 'disabled');
                        }
                    }
                }
                $('select')[i].setAttribute('hrms_read_write_flag', 'r');
            }
            for (var i = 0; i < $('button').length; i++) {
                $('button')[i].setAttribute('disabled', 'disabled');
                $('button')[i].setAttribute('hrms_read_write_flag', 'r');
                try {
                    //CHECK BUTTON SPAN CLASS
                    if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'fa fa-backward') {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'fa fa-caret-left fa-lg'.trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'fa fa-caret-right fa-lg'.trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'fa fa-forward'.trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'fa fa-pencil'.trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'glyphicon glyphicon-time'.trim()) {
                        for (var j = 0; j < $('button')[i].parentElement.parentElement.children.length; j++) {
                            $('button')[i].parentElement.parentElement.children[j].removeAttribute('disabled');
                        }
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'glyphicon glyphicon-calendar'.trim()) {
                        for (var j = 0; j < $('button')[i].parentElement.parentElement.children.length; j++) {
                            $('button')[i].parentElement.parentElement.children[j].removeAttribute('disabled');
                        }
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].firstChild.getAttribute('class').toLowerCase().trim() == 'fa fa-search'.trim()) {
                        for (var j = 0; j < $('button')[i].parentElement.parentElement.children.length; j++) {
                            $('button')[i].parentElement.parentElement.children[j].removeAttribute('disabled');
                        }
                        $('button')[i].removeAttribute('disabled');
                    }
                } catch (error) {
//                            console.debug(error)
                }
                try {
                    //CHECK BUTTON TEXT
                    if ($('button')[i].textContent.toLowerCase().trim() == textBT0002.toLowerCase().trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].textContent.toLowerCase().trim() == textBT0016.toLowerCase().trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].textContent.toLowerCase().trim() == textBT0001.toLowerCase().trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].textContent.toLowerCase().trim() == textBT0043.toLowerCase().trim()) {
                        $('button')[i].removeAttribute('disabled');
                    } else if ($('button')[i].textContent.toLowerCase().trim() == textLB0038.toLowerCase().trim()) {
                        $('button')[i].removeAttribute('disabled');
                    }
                } catch (error) {
//                            console.debug(error)
                }
                try {
                    //CHECK INPUT OF PAGGING
                    if ($('input')[i].getAttribute('style').trim() == 'text-align: center'.trim() &&
                            $('input')[i].getAttribute('class').trim() == 'form-control'.trim() &&
                            $('input')[i].getAttribute('autocomplete').trim() == 'off'.trim() &&
                            $('input')[i].getAttribute('type').trim() == 'text'.trim() &&
                            $('input')[i].parentElement.children.length == 8 &&
                            $('input')[i].parentElement.children[0].tagName.toUpperCase().trim() == 'LABEL'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[1].tagName.toUpperCase().trim() == 'BUTTON'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[2].tagName.toUpperCase().trim() == 'BUTTON'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[3].tagName.toUpperCase().trim() == 'LABEL'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[4].tagName.toUpperCase().trim() == 'INPUT'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[5].tagName.toUpperCase().trim() == 'LABEL'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[6].tagName.toUpperCase().trim() == 'BUTTON'.toUpperCase().trim() &&
                            $('input')[i].parentElement.children[6].tagName.toUpperCase().trim() == 'BUTTON'.toUpperCase().trim()

                            ) {
                        $('input')[i].removeAttribute('disabled');
                    }
                } catch (error) {
//                            console.debug(error)
                }
            }
            for (var i = 0; i < $('table').length; i++) {
                $('table')[i].setAttribute('hrms_read_write_flag', 'r');
            }
        }
    }
}



]]>
</script>
</jsp:root>